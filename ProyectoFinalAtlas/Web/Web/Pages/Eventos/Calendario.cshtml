@page
@model Web.Pages.Eventos.CalendarioModel
@{
    Layout = "_DashboardLayout";
    ViewData["Title"] = "Calendario de Eventos";
}

<style>
    .fc-event, .fc-event-dot {
        background-color: #4A90E2; /* Color principal del evento */
        color: white; /* Color del texto dentro del evento */
    }

    .fc-event:hover, .fc-event-dot:hover {
        background-color: #357ABD; /* Color al pasar el mouse */
    }

    #calendar {
        max-width: 900px;
        margin: 0 auto;
        padding: 20px;
        background-color: #fff;
        border-radius: 8px;
        box-shadow: 0 4px 8px rgba(0,0,0,0.1);
    }

    .fc-toolbar-title {
        font-size: 24px;
        font-weight: bold;
        color: #333;
    }

    .fc-button {
        background-color: #007bff;
        color: white;
        border: none;
        padding: 10px 20px;
        border-radius: 5px;
        cursor: pointer;
        transition: background-color 0.3s;
    }

    .fc-button:hover {
        background-color: #0056b3;
        color: white; /* Asegura que el texto sigue siendo blanco al pasar el mouse */
    }

    /* Estilos para asegurar visibilidad */
    .fc-button-primary {
        background-color: #007bff; /* Fondo azul para botones */
        color: white; /* Texto blanco para botones */
    }

    .fc-button-primary:hover {
        background-color: #0056b3; /* Color más oscuro para el estado hover */
        color: white; /* Mantener el texto blanco en hover */
    }

    .fc-button-primary:not(:disabled):active, .fc-button-primary:not(:disabled).fc-button-active {
        background-color: #004494; /* Color más oscuro para cuando está activo */
        color: white;
    }

    .fc-button-primary:focus {
        box-shadow: 0 0 0 0.2rem rgba(38, 143, 255, 0.5); /* Glow efecto para foco */
    }

    .fc .fc-button-group .fc-button {
        background-color: black
    }
</style>



@if (TempData["SuccessMessage"] != null)
{
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            Swal.fire({
                title: 'Registro Exitoso!',
                text: '@TempData["SuccessMessage"]',
                icon: 'success',
                confirmButtonText: 'Ok'
            });
        });
    </script>
}

@if (TempData["ErrorMessage"] != null)
{
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            Swal.fire({
                title: 'Error',
                text: '@TempData["ErrorMessage"]',
                icon: 'error',
                confirmButtonText: 'Ok'
            });
        });
    </script>
}

<div class="container mt-5">
    <div class="row">
        <div class="col-12 d-flex justify-content-between align-items-center mb-2">
            <h2 class="text-center">Calendario de Eventos</h2>
            @if (User.IsInRole("1") || User.IsInRole("2"))
            {
                <a class="btn btn-primary float-right" asp-page="/Eventos/MisEventos"><i class="fas fa-arrow-left"></i> Mis Eventos</a>
            }
        </div>
        <div class="col-md-12">
            <div id="calendar"></div>
        </div>
    </div>
</div>

<form method="post" id="attendanceForm" style="display:none;">
    <input type="hidden" name="IDEvento" id="IDEvento">
    <input type="hidden" name="IdUsuario" id="IdUsuario" value="@Model.UserId">
</form>

<script src="https://cdn.jsdelivr.net/npm/fullcalendar@6.1.10/index.global.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
<script>
    document.addEventListener('DOMContentLoaded', function () {
        var eventosData = @Html.Raw(Json.Serialize(Model.Evento));
        var calendarEl = document.getElementById('calendar');
        var calendar = new FullCalendar.Calendar(calendarEl, {
            locale: 'es',
            initialView: 'dayGridMonth',
            buttonText: {
                today: 'Hoy'
            },
            eventContent: function (arg) {
                let arrayOfDomNodes = [];
                let title = document.createElement('div');
                title.innerHTML = '<strong>' + arg.event.title + '</strong>';
                title.classList.add('fc-event-title');

                let time = document.createElement('div');
                time.innerHTML = arg.timeText;
                time.classList.add('fc-event-time');

                arrayOfDomNodes = [title, time];

                return { domNodes: arrayOfDomNodes };
            },
            events: eventosData.map(function (evento) {
                console.log("Evento individual:", evento);  // Esto mostrará cada evento y sus propiedades
                return {
                    id: evento.id,  // Verifica aquí si realmente 'evento.ID' existe y tiene un valor adecuado
                    title: evento.titulo,
                    start: evento.fechaHoraInicio,
                    end: evento.fechaHoraFinal,
                    color: '#AED9E0',
                    textColor: 'black',
                    description: evento.descripcion
                };
            }),
            headerToolbar: {
                left: 'prev,next today',
                center: 'title',
                right: 'dayGridMonth,timeGridWeek,listWeek'
            },
            eventClick: function (info) {
                Swal.fire({
                    title: info.event.title,
                    html: 'Descripción: ' + info.event.extendedProps.description +
                        '<br>¿Desea asistir a este evento?',
                    icon: 'question',
                    showCancelButton: true,
                    confirmButtonColor: '#3085d6',
                    cancelButtonColor: '#d33',
                    confirmButtonText: 'Sí, asistiré'
                }).then((result) => {
                    if (result.isConfirmed) {
                        document.getElementById('IDEvento').value = info.event.id;
                        document.getElementById('attendanceForm').submit();
                    }
                });
            }
        });
        calendar.render();
    });
</script>

